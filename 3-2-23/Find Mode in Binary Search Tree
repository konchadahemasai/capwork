class Solution {
    public int[] findMode(TreeNode root) {
        List <Integer> arr=new ArrayList<>();
        int[] a= new int[10000];
        int m=0;
        inorder(root,arr);
        int max=0;
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<arr.size();i++){
            if(map.containsKey(arr.get(i))){
                map.put(arr.get(i),map.get(arr.get(i))+1);
                max=Math.max(max,map.get(arr.get(i)));
            }
            else{
                map.put(arr.get(i),1);
                max=Math.max(max,1);
            }
        }
        for(Map.Entry<Integer,Integer> entry:map.entrySet()){
            if(entry.getValue()==max)
                a[m++]=entry.getKey();
        }
        int[] b=new int[m];
        for(int i=0;i<m;i++){
            b[i]=a[i];
        }
        return b;
    }
        
        
    
    public void inorder(TreeNode root,List<Integer>arr){
        if(root==null)
            return;
        inorder(root.left,arr);
        arr.add(root.val);
        inorder(root.right,arr);
    }
}
